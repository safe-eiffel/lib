ECLI --

	1) Structure
	2) Installation
	3) Known problems
	4) Tested on ...

1. Structure

    + ecli
	+- doc				-- documentation
	+- examples			-- examples
	|   +-  books			-- Common files for some examples
	|   +-  control			-- System that includes all classes for compilation 
	|   +-	test1			-- table creation, insertions, selection, drop
	|   +-	qa_example		-- sample application for cursor generator
	|   +-	test_Xaction		-- transaction test program
	|   +-	test_gc			-- (obsolete) tests for problems with GC
	|   +-	test_rowset		-- tests rowset operations : insert, updates; show specific error handling
	|   +-	test_values		-- tests all ECLI_VALUE heirs
	|   +-  test_decimal		-- tests ECLI_DECIMAL
	|   +-  test_procedures		-- tests stored procedures
	|   +-  voidsafety-migration	-- sample system for testing voidsafety compilation (not executable)
	|
	+- src
	|   +-	abstract			-- abstract ECLI data types
	|   +-	data				-- data transfer classes
	|   |      +-   arrayed                 -- arrayed data for 'bulk' transfer, reducing network traffic.
	|   +-	pattern				-- used pattern classes
	|   +-	metadata			-- various classes that help get metadata
	|   +-	spec				-- special classes
	|   |	   +-	C			-- C wrappers
	|   |	   +-	constants		-- classes that encapsulate various ODBC constants
	|   |	   +-	ise			-- ise specific
	|   |	   |	   +-	windows			Platform specific
	|   |	   |	   +-	linux
	|   |	   +-	ge			-- Gobo Eiffel Compiler (gec) specific
	|   |	    	   +-	windows		 	...
	|   |	    	   +-	linux
	|   +-  support			-- various support classes
	|
	+- support			-- support classes that could be used in other projects
	+- tools
	    +-	isql			-- CLISQL : Command Line Interactive SQL 
	    +-	query_assistant		-- cursor classes generator
	   
    + kernel				-- the SAFE_KERNEL variable should point to it
        +- external			-- external support for all SAFE projects
            +- src			
      

NOTE : The Kernel directory provides all SAFE projects (ECLI, EPDF and others) various support classes mainly
       related to external support.  The SAFE_KERNEL variable should point to it.


2. Installation

  NOTE for Linux/Unix (*n*x) users : 
	This package uses unixodbc, avalaible at http://www.unixodbc.org
	It has been tested with PostgreSQL 7.0.2, 7.1.3, 8.2, 8.3

	PLEASE, use the LATEST version available, to get the best benefits of this library.
	
  2.0 Define environment variables :

  	ECLI 		-  the ECLI directory
  	GOBO_OS 	-  DO NOT FORGET to set it especially under linux (set it to 'linux')  
	GOBO_CC		-  Windows specific: the C compiler you've used to compile the C wrapper library.
			   Supported 'keys' : lcc, msc, bcc.
	GOBO_EIFFEL	-  'ge' or 'ise'
	SAFE_KERNEL	-  should point to the 'kernel' directory; this SAFE_KERNEL provides various 
			   utility classes and functions used by all SAFE projects libraries.
	
	
  2.1. Building the C libraries.
  
  
	The libraries that must be built are :
		SAFE_KERNEL	external support
		ECLI		external support
		
	** DO NOT TRUST libraries you would get from an archive; maybe they have not been
          built with a compiler compatible with your system **

	2.1.1 SAFE_KERNEL
		
	A) cd to SAFE_KERNEL directory
	B) run 'geant install'
	
	This builds a library named xs_c_${GOBO_CC}.${lib}
	
	Example: 
		WIN32, ge, msc => xs_c_msc.lib in SAFE_KERNEL/external/src/spec/ge/windows
		Linux, ise     => libxs_c.a  in SAFE_KERNEL/external/src/spec/ise/linux
			
	Known problems : makefiles or .bat files are known to work, but problems may still remain.

	2.1.2 ECLI
	
	A) cd to ECLI directory
	B) run the following command : geant install
	
	Example: 
		WIN32, ge, msc => ecli_c_lcc.lib in ECLI/src/spec/ge/windows
		Linux, ise     => libecli_c.a  in ECLI/src/spec/ise/linux
	
  2.2. Building the samples

	A) Building all the seamples
		A.1) go to the ${ECLI}/examples directory
		A.2) Run the command : geant compile
	B) building a simple example application
		B.1) go to the desired sample directory, e.g. 'cd $ECLI/examples/test1'
		B.2) Run the following command : geant compile
	
3. Known Problems

	Linux/Unix

Intallation problems when building unixodbc while your system already has one.  
This problem appeared on SUSE systems.  
PLEASE : find the ODBC.INI and ODBCINST.INI files.
Verify that the datasources and drivers you've defined point to the unixodbc-provided drivers.


4. Tested on ...

	OS			Database		Driver
	----------		----------		---------
								
	WIN (XP,7)		Oracle 8i, 9i, 10g	Oracle
	32 and 64 bits		Ms SQL Server		Sql Server
				Access			MS
				PostgreSQL 8.1, 8.2	PostgreSQL
				Firebird 1.5		Firebird
				
	Debian Linux 3.0r	PostgreSQL 7.1.3	UnixODBC
	Ubuntu 32 and 64bits	PostgreSQL 8.2		UnixODBC
	